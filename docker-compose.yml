services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: bankdb
      POSTGRES_USER: bankuser
      POSTGRES_PASSWORD: bankpass
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./BaseDatos.sql:/docker-entrypoint-initdb.d/01_init.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bankuser -d bankdb"]
      interval: 5s
      timeout: 3s
      retries: 20

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile.jvm
    image: iess-api
    depends_on:
      db:
        condition: service_healthy
    environment:
      # Datasource a Postgres (mismo que antes)
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://db:5432/bankdb
      QUARKUS_DATASOURCE_USERNAME: bankuser
      QUARKUS_DATASOURCE_PASSWORD: bankpass

      # ---- CORS para el front en 3000 ----
      QUARKUS_HTTP_CORS: "true"
      QUARKUS_HTTP_CORS_ORIGINS: "http://192.168.100.154:3000"
      QUARKUS_HTTP_CORS_METHODS: "GET,POST,PUT,DELETE,OPTIONS"
      QUARKUS_HTTP_CORS_HEADERS: "accept,origin,authorization,content-type,x-requested-with"
      QUARKUS_HTTP_CORS_EXPOSED_HEADERS: "location,link"
      QUARKUS_HTTP_CORS_ACCESS_CONTROL_ALLOW_CREDENTIALS: "true"
    ports:
      - "8080:8080"

  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_BASE: "http://192.168.100.154:8080"
    image: iess-frontend
    depends_on:
      - api
    ports:
      - "3000:3000"

volumes:
  db_data:
